{"ts":1357429698435,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\nnamespace daliaIT\\rough;\nclass MacroParser\n{\n    protected\n        $macroLib,\n        $pattern =  '/^([ \\t]*)#@(.*?)(?:@#|#(.*)?#@#)/sm';\n    \n    public function __construct(IMacroLib $lib){\n        $this->macroLib = $lib;\n    }\n    #@get public macroLib,pattern #\n    public function getMacroLib(){\n        return $this->macroLib;\n    }\n    \n    public function getPattern(){\n        return $this->pattern;\n    }\n    #@# \n    \n    #@set public macroLib IMacroLib#\n    public function setMacroLib(IMacroLib $value){\n        $this->macroLib = $value;\n        return $this;\n    }\n    #@#\n    \n    #@set public pattern #\n    public function setPattern( $value){\n        $this->pattern = $value;\n        return $this;\n    }\n    #@#\n    \n    public function replace($input){\n        $lib =$this->macroLib;\n        $callback = function($matches) use ($lib){\n            $indent = $matches[1];\n            $macroString = $matches[2];\n            $content = (isset($matches[3]))\n                ? $matches[3]\n                : '';\n            $args = explode(\" \",$macroString);\n            $name = array_shift($args);\n            return  $lib->runMacro($name,$args,$content,$macroString,$indent);\n        };\n        return preg_replace_callback($this->pattern, $callback, $input);\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":1287}]],"length":1287}
